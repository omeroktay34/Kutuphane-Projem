@model kutuphane.Models.BookPageModel

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Kitap Sayfası Ekle</title>
    <style>
        :root {
            --primary-color: #8a5f36;
            --secondary-color: #f9f5f1;
            --accent-color: #d86c00;
            --text-color: #333;
            --light-text: #f9f5f1;
        }
  
    body {
        background-color: #f9f5f1;
        display: flex;
        flex-direction: column;
        min-height: 100vh;
        margin: 0;
        padding: 0;
    }
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
          
        }
   
    .form-wrapper {
        display: flex;
        justify-content: center;
        align-items: center;
        flex-grow: 1;
        padding: 20px;
        background-color: var(--secondary-color);
    }


    .form-container {
        width: 100%;
        max-width: 700px;
        background: white;
        border-radius: 15px;
        box-shadow: 0 10px 30px rgba(138, 95, 54, 0.2);
        overflow: hidden;
        position: relative;
        transform: translateY(0);
        opacity: 1;
        transition: all 0.5s ease;
        animation: fadeInUp 0.8s ease-out;
        margin: 20px 0;
    }

        .form-container:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 35px rgba(138, 95, 54, 0.3);
        }

        .form-header {
            background: var(--primary-color);
            color: var(--light-text);
            padding: 25px 30px;
            text-align: center;
            position: relative;
            overflow: hidden;
        }

        .form-header h2 {
            font-size: 1.8rem;
            position: relative;
            z-index: 2;
            text-shadow: 1px 1px 3px rgba(0, 0, 0, 0.2);
        }

        .form-header::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(
                to bottom right,
                transparent 0%,
                rgba(255, 255, 255, 0.1) 50%,
                transparent 100%
            );
            transform: rotate(30deg);
            animation: shine 5s infinite linear;
        }

        .form-body {
            padding: 30px;
        }

        .form-group {
            margin-bottom: 25px;
            position: relative;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            font-weight: 600;
            color: var(--primary-color);
            transition: all 0.3s ease;
        }

        .form-group input,
        .form-group textarea {
            width: 100%;
            padding: 12px 15px;
            border: 2px solid #e0d6cc;
            border-radius: 8px;
            font-size: 16px;
            transition: all 0.3s ease;
            background-color: rgba(249, 245, 241, 0.5);
        }

        .form-group input:focus,
        .form-group textarea:focus {
            border-color: var(--primary-color);
            box-shadow: 0 0 0 3px rgba(138, 95, 54, 0.2);
            outline: none;
            background-color: white;
        }

        .form-group input {
            height: 50px;
        }

        .form-group textarea {
            min-height: 150px;
            resize: vertical;
        }

        .submit-btn {
            width: 100%;
            padding: 15px;
            background: var(--primary-color);
            color: white;
            border: none;
            border-radius: 8px;
            font-size: 18px;
            font-weight: 600;
            cursor: pointer;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
            box-shadow: 0 4px 15px rgba(138, 95, 54, 0.3);
        }

        .submit-btn:hover {
            background: #7a5430;
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(138, 95, 54, 0.4);
        }

        .submit-btn:active {
            transform: translateY(0);
        }

        .submit-btn::after {
            content: '';
            position: absolute;
            top: -50%;
            left: -60%;
            width: 200%;
            height: 200%;
            background: rgba(255, 255, 255, 0.2);
            transform: rotate(30deg);
            transition: all 0.3s ease;
        }

        .submit-btn:hover::after {
            left: 100%;
        }

        .floating-decoration {
            position: absolute;
            opacity: 0.1;
            z-index: 0;
        }

        .decoration-1 {
            top: 20px;
            right: 20px;
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: var(--primary-color);
            animation: float 6s ease-in-out infinite;
        }

        .decoration-2 {
            bottom: 40px;
            left: 30px;
            width: 60px;
            height: 60px;
            border-radius: 20px;
            background: var(--accent-color);
            animation: float 5s ease-in-out infinite 1s;
        }

        q@keyframes fadeInUp {
            from {
                opacity: 0;
                transform: translateY(20px);
            }
            to {
                opacity: 1;
                transform: translateY(0);
            }
        }

        q@keyframes shine {
            from {
                transform: rotate(30deg) translate(-30%, -30%);
            }
            to {
                transform: rotate(30deg) translate(30%, 30%);
            }
        }

        q@keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
            }
            50% {
                transform: translateY(-15px) rotate(5deg);
            }
            100% {
                transform: translateY(0) rotate(0deg);
            }
        }

       q@media (max-width: 768px) {
            .form-container {
                max-width: 100%;
            }
            
            .form-header h2 {
                font-size: 1.5rem;
            }
        }
    </style>
</head>
<body>
    <div class="form-wrapper">
        <div class="form-container">
            <div class="floating-decoration decoration-1"></div>
            <div class="floating-decoration decoration-2"></div>
            
            <div class="form-header">
                <h2>Kitap Sayfası Ekle</h2>
            </div>
            
            <div class="form-body">
                <form asp-action="AddBookPage" method="post">
                <input type="hidden" asp-for="BookModelId" />
                
                <div class="form-group">
                    <label asp-for="PageNumber">Sayfa Numarası</label>
                    <input asp-for="PageNumber" type="number" min="1" placeholder="Sayfa numarasını girin" />
                </div>
                
                <div class="form-group">
                    <label asp-for="Content">İçerik</label>
                    <textarea asp-for="Content" placeholder="Sayfa içeriğini yazın..."></textarea>
                </div>
                
                <button type="submit" class="submit-btn">Sayfayı Kaydet</button>
            </form>
        </div>
    </div>

    <script>
      
        document.querySelector('form').addEventListener('submit', function(e) {
            const submitBtn = document.querySelector('.submit-btn');
            submitBtn.innerHTML = '<span class="btn-loader"></span> Kaydediliyor...';
            submitBtn.style.pointerEvents = 'none';
            
            
            submitBtn.classList.add('processing');
        });

     
        const inputs = document.querySelectorAll('input, textarea');
        inputs.forEach(input => {
            input.addEventListener('focus', function() {
                const label = this.previousElementSibling;
                if (label && label.tagName === 'LABEL') {
                    label.style.transform = 'translateY(-5px)';
                    label.style.color = 'var(--accent-color)';
                }
            });
            
            input.addEventListener('blur', function() {
                const label = this.previousElementSibling;
                if (label && label.tagName === 'LABEL' && !this.value) {
                    label.style.transform = 'translateY(0)';
                    label.style.color = 'var(--primary-color)';
                }
            });
        });
    </script>
</body>
</html>