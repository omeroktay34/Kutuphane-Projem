@model List<kutuphane.Models.BookPageModel>

@{
    var totalPages = Model.Count;
    var startPage = (int)(ViewBag.CurrentStartPage ?? 1);
    var showAll = (bool)(ViewBag.ShowAll ?? false);
    var bookTitle = Model.FirstOrDefault()?.BookModel?.Title ?? "Kitap";
}

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@bookTitle - Kütüphane</title>
    <style>
        :root {
            --primary-color: #8a5f36; 
            --secondary-color: #f9f5f1; 
            --page-color: #f8f1e5;
            --text-color: #3a2c1a; 
            --shadow-color: rgba(0, 0, 0, 0.2);
        }

        body {
           
            background-color: var(--secondary-color);
            color: var(--text-color);
            margin: 0;
            padding: 0;
            background-image: url('https://images.unsplash.com/photo-1507842217343-583bb7270b66?ixlib=rb-1.2.1&auto=format&fit=crop&w=1350&q=80');
            background-size: cover;
            background-attachment: fixed;
            background-position: center;
            background-blend-mode: overlay;
        }

        .library-container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 30px;
            position: relative;
        }

        .library-header {
            text-align: center;
            margin-bottom: 40px;
            position: relative;
            animation: fadeIn 1s ease-in-out;
        }

        .library-header h2 {
            color: var(--primary-color);
            font-size: 3rem;
            margin-bottom: 15px;
            text-shadow: 2px 2px 4px var(--shadow-color);
            position: relative;
            display: inline-block;
            padding: 0 30px;
        }

        .library-header h2:before, .library-header h2:after {
            content: "";
            position: absolute;
            top: 50%;
            width: 70px;
            height: 3px;
            background-color: var(--primary-color);
        }

        .library-header h2:before {
            left: -80px;
        }

        .library-header h2:after {
            right: -80px;
        }

        .book-view {
            perspective: 1500px;
            margin-bottom: 50px;
        }

        .book-pages {
            display: flex;
            justify-content: center;
            gap: 30px;
            position: relative;
        }

        .page {
            width: 500px;
            height: 700px;
            background-color: var(--page-color);
            padding: 40px;
            box-sizing: border-box;
            position: relative;
            box-shadow: 0 15px 40px var(--shadow-color);
            transform-style: preserve-3d;
            transition: transform 0.5s ease, box-shadow 0.3s ease;
            border: 1px solid #d4c8b7;
            overflow-y: auto;
        }

        .page:hover {
            box-shadow: 0 20px 50px rgba(0, 0, 0, 0.3);
            transform: translateY(-8px);
        }

        .page-left {
            transform-origin: right center;
            animation: pageTurnLeft 0.8s ease-in-out forwards;
        }

        .page-right {
            transform-origin: left center;
            animation: pageTurnRight 0.8s ease-in-out forwards;
        }

        .page-content {
            line-height: 1.8;
            font-size: 1.3rem;
            text-align: justify;
            hyphens: auto;
            padding: 10px;
        }

        .page-number {
            position: absolute;
            bottom: 20px;
            right: 30px;
            font-weight: bold;
            color: var(--primary-color);
            font-size: 1.1rem;
        }

        .all-pages-view {
            max-width: 900px;
            margin: 0 auto;
            animation: fadeIn 1s ease-in-out;
        }

        .single-page {
            width: 100%;
            min-height: 400px;
            background-color: var(--page-color);
            padding: 50px;
            margin-bottom: 30px;
            box-shadow: 0 10px 30px var(--shadow-color);
            position: relative;
            transition: transform 0.3s ease;
            border: 1px solid #d4c8b7;
        }

        .single-page:hover {
            transform: translateY(-5px);
            box-shadow: 0 15px 40px rgba(0, 0, 0, 0.25);
        }

        .navigation {
            margin-top: 50px;
            text-align: center;
            animation: fadeIn 1s ease-in-out;
        }

        .btn {
            display: inline-block;
            padding: 12px 25px;
            margin: 0 10px;
            border: none;
            border-radius: 5px;
            background-color: var(--primary-color);
            color: white;
            text-decoration: none;
            font-size: 1.1rem;
            cursor: pointer;
            transition: all 0.3s ease;
            box-shadow: 0 4px 8px var(--shadow-color);
        }

        .btn:hover {
            background-color: #6d4b2a;
            transform: translateY(-3px);
            box-shadow: 0 6px 12px var(--shadow-color);
        }

        .btn-secondary {
            background-color: #6d4b2a;
        }

        .btn-info {
            background-color: #a78a6d;
        }

        .main-menu-link {
            display: inline-block;
            margin-top: 30px;
            color: var(--primary-color);
            text-decoration: none;
            font-weight: bold;
            font-size: 1.2rem;
            transition: color 0.3s ease;
            padding: 8px 15px;
            border: 2px solid var(--primary-color);
            border-radius: 5px;
        }

        .main-menu-link:hover {
            color: #6d4b2a;
            background-color: rgba(138, 95, 54, 0.1);
            text-decoration: none;
        }

      
        q@keyframes fadeIn {
            from { opacity: 0; }
            to { opacity: 1; }
        }

        q@keyframes pageTurnLeft {
            0% { transform: rotateY(0deg); }
            50% { transform: rotateY(-15deg); }
            100% { transform: rotateY(0deg); }
        }

        q@keyframes pageTurnRight {
            0% { transform: rotateY(0deg); }
            50% { transform: rotateY(15deg); }
            100% { transform: rotateY(0deg); }
        }

       
        .page:after {
            content: "";
            position: absolute;
            top: 0;
            left: 0;
            width: 8px;
            height: 100%;
            background: linear-gradient(to right, 
                rgba(0,0,0,0.1) 0%, 
                rgba(0,0,0,0.0) 100%);
        }

        /* Scrollbar styling */
        .page::-webkit-scrollbar {
            width: 10px;
        }

        .page::-webkit-scrollbar-track {
            background: #f1e9d9;
        }

        .page::-webkit-scrollbar-thumb {
            background-color: var(--primary-color);
            border-radius: 5px;
        }

       
        .library-ambiance {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
            background: radial-gradient(circle at center, transparent 0%, rgba(138, 95, 54, 0.1) 100%);
        }

        
        q@media (max-width: 1200px) {
            .page {
                width: 450px;
                height: 650px;
                padding: 35px;
            }
        }

        q@media (max-width: 1000px) {
            .page {
                width: 400px;
                height: 600px;
                padding: 30px;
            }
            
            .page-content {
                font-size: 1.2rem;
            }
        }

        q@media (max-width: 900px) {
            .book-pages {
                flex-direction: column;
                align-items: center;
            }
            
            .page {
                width: 90%;
                height: auto;
                min-height: 500px;
                margin-bottom: 30px;
            }
            
            .all-pages-view {
                width: 95%;
            }
            
            .library-header h2 {
                font-size: 2.5rem;
            }
        }

        q@media (max-width: 600px) {
            .library-container {
                padding: 20px;
            }
            
            .page, .single-page {
                padding: 25px;
            }
            
            .page-content {
                font-size: 1.1rem;
                line-height: 1.7;
            }
            
            .btn {
                padding: 10px 20px;
                font-size: 1rem;
                margin: 5px;
            }
        }
    </style>
</head>
<body>
    <div class="library-ambiance"></div>
    
    <div class="library-container">
        <div class="library-header">
            <h2>@bookTitle</h2>
        </div>

        @if (!showAll)
        {
            var leftPageIndex = startPage - 1;
            var leftPage = (leftPageIndex < totalPages) ? Model[leftPageIndex] : null;
            var rightPage = (leftPageIndex + 1 < totalPages) ? Model[leftPageIndex + 1] : null;
            
            <div class="book-view">
                <div class="book-pages">
                    @if (leftPage != null)
                    {
                        <div class="page page-left">
                            <div class="page-content">@leftPage.Content</div>
                            <span  class="page-number">Sayfa @leftPage.PageNumber</span>
                        </div>
                    }
                    
                    @if (rightPage != null)
                    {
                        <div class="page page-right">
                            <div class="page-content">@rightPage.Content</div>
                            <span class="page-number">Sayfa @rightPage.PageNumber</span>
                        </div>
                    }
                </div>
            </div>
        }
        else
        {
            <div class="all-pages-view">
                @foreach (var sayfa in Model)
                {
                    <div class="single-page">
                        <div class="page-content">@sayfa.Content</div>
                        <span class="page-number">Sayfa @sayfa.PageNumber</span>
                    </div>
                }
            </div>
        }

        <div class="navigation">
            @if (!showAll)
            {
                @if (startPage > 2)
                {
                    <a asp-action="ReadBook" asp-route-bookId="@ViewBag.BookId" asp-route-startPage="@(ViewBag.CurrentStartPage - 2)" class="btn btn-secondary">← Önceki Sayfalar</a>
                }
                
                @if ((startPage + 1) < totalPages)
                {
                    <a asp-action="ReadBook" asp-route-bookId="@ViewBag.BookId" asp-route-startPage="@(ViewBag.CurrentStartPage + 2)" class="btn" style="margin-left: 20px;">Sonraki Sayfalar →</a>
                }
            }
            
            <div style="margin-top: 30px;">
                <a href="MainMenu" class="main-menu-link">Ana Menüye Dön</a>
                
                <form method="get" asp-action="ReadBook" style="display: inline-block; margin-left: 20px;">
                    <input type="hidden" name="bookId" value="@ViewBag.BookId" />
                    <input type="hidden" name="startPage" value="1" />
                    <input type="hidden" name="showAll" value="@(showAll ? "false" : "true")" />
                    <button type="submit" class="btn btn-info">
                        @(showAll ? "Sayfaları İki Sütun Göster" : "Tüm Sayfaları Alt Alta Göster")
                    </button>
                </form>
            </div>
        </div>
    </div>

    <script>
      
        document.addEventListener('DOMContentLoaded', function() {
            const links = document.querySelectorAll('a[href*="ReadBook"]');
            
            links.forEach(link => {
                link.addEventListener('click', function(e) {
                    e.preventDefault();
                    
                    const pages = document.querySelectorAll('.page');
                    pages.forEach(page => {
                        page.style.transform = 'rotateY(90deg)';
                        page.style.opacity = '0';
                        page.style.transition = 'transform 0.4s ease, opacity 0.4s ease';
                    });
                    
                  
                    setTimeout(() => {
                        window.location.href = link.href;
                    }, 400);
                });
            });
            
          
            setTimeout(() => {
                const pages = document.querySelectorAll('.page, .single-page');
                pages.forEach(page => {
                    page.style.opacity = '1';
                });
            }, 100);
            
          
            function adjustTextSize() {
                const pageContents = document.querySelectorAll('.page-content');
                const baseSize = parseFloat(getComputedStyle(document.documentElement).fontSize;
                
                pageContents.forEach(content => {
                 
                    if (content.scrollHeight > content.clientHeight) {
                        const currentSize = parseFloat(getComputedStyle(content).fontSize);
                        content.style.fontSize = (currentSize - 0.1) + 'rem';
                    }
                });
            }
            
       
            adjustTextSize();
            window.addEventListener('resize', adjustTextSize);
        });
    </script>
</body>
</html>