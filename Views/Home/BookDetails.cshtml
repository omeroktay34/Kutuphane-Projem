@model kutuphane.Models.BookModel

<!DOCTYPE html>
<html lang="tr">
<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>Kitap DetaylarÄ± - @Model.Title</title>
 <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
           
            background: linear-gradient(135deg, #f9f5f1 0%, #ede3d6 100%);
            min-height: 100vh;
            color: #2c1810;
            overflow-x: hidden;
        }

        .container {
            max-width: 1200px;
            margin: 0 auto;
            padding: 40px 20px;
            position: relative;
        }

        .background-pattern {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            opacity: 0.03;
            background-image: radial-gradient(circle at 25% 25%, #8a5f36 2px, transparent 2px),
                              radial-gradient(circle at 75% 75%, #8a5f36 1px, transparent 1px);
            background-size: 100px 100px;
            z-index: -1;
            animation: float 20s ease-in-out infinite;
        }

        q@keyframes float {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            50% { transform: translateY(-20px) rotate(1deg); }
        }

        .book-header {
            text-align: center;
            margin-bottom: 60px;
            position: relative;
        }

        .book-title {
            font-size: 3.5rem;
            font-weight: bold;
            color: #8a5f36;
            margin-bottom: 20px;
            text-shadow: 2px 2px 4px rgba(138, 95, 54, 0.1);
            position: relative;
            display: inline-block;
            animation: slideInFromTop 1s ease-out;
        }

        .book-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 0;
            height: 3px;
            background: linear-gradient(90deg, #8a5f36, #d4af37);
            animation: expandLine 1.5s ease-out 0.5s forwards;
            border-radius: 2px;
        }

        q@keyframes slideInFromTop {
            0% { transform: translateY(-50px); opacity: 0; }
            100% { transform: translateY(0); opacity: 1; }
        }

       q@keyframes expandLine {
            0% { width: 0; }
            100% { width: 200px; }
        }

        .main-content {
            display: grid;
            grid-template-columns: 1fr 2fr;
            gap: 60px;
            align-items: start;
            animation: fadeInUp 1s ease-out 0.3s backwards;
        }

        q@keyframes fadeInUp {
            0% { transform: translateY(30px); opacity: 0; }
            100% { transform: translateY(0); opacity: 1; }
        }

        .book-cover-section {
            position: relative;
        }

.cover-container {
    position: relative;
    max-width: 400px;
    margin: 0 auto;
    perspective: 1000px;
    padding: 20px; 
    background: rgba(255, 255, 255, 0.2); 
    border-radius: 20px;
}

.cover-container img {
    width: 100%;
    height: 500px; 
    object-fit: cover; 
    border-radius: 15px;
    box-shadow: 0 20px 40px rgba(138, 95, 54, 0.3);
}


.book-cover {
    width: 100%;
    height: 100%;
    max-height: 500px; 
    object-fit: contain; 
    border-radius: 15px;
    box-shadow: 0 20px 40px rgba(138, 95, 54, 0.3);
    display: block;
    margin: 0 auto; 
    background: white; 
    padding: 10px; 
    border: 1px solid rgba(138, 95, 54, 0.1); 
}

        .book-cover::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            right: 0;
            bottom: 0;
            background: linear-gradient(45deg, rgba(212, 175, 55, 0.1), rgba(138, 95, 54, 0.1));
            opacity: 0;
            transition: opacity 0.3s ease;
            border-radius: 15px;
        }

        .book-cover:hover {
            transform: rotateY(-10deg) rotateX(5deg) translateZ(20px);
            box-shadow: 0 30px 60px rgba(138, 95, 54, 0.4);
        }

        .book-cover:hover::before {
            opacity: 1;
        }

.no-cover-placeholder {
    width: 100%;
    height: 500px;
    background: linear-gradient(135deg, #8a5f36, #b8845c);
    border-radius: 15px;
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-size: 5rem;
    opacity: 50;
    
    text-align: center;
    box-shadow: 0 20px 40px rgba(138, 95, 54, 0.3);
    position: relative;
    overflow: hidden;
    margin: 0 auto; 
    padding: 20px; 
    border: 1px solid rgba(138, 95, 54, 0.2); 
}


.no-cover-placeholder-span {
opacity: 0px;
}


        .no-cover-placeholder::before {
            
            font-size: 4rem;
            opacity: 0.3;
            position: absolute;
            animation: pulse 2s ease-in-out infinite;
        }

        q@keyframes pulse {
            0%, 100% { transform: scale(1); opacity: 0.3; }
            50% { transform: scale(1.1); opacity: 0.6; }
        }

        .book-info {
            background: rgba(255, 255, 255, 0.9);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(138, 95, 54, 0.1);
            border: 1px solid rgba(138, 95, 54, 0.1);
            position: relative;
            overflow: hidden;
        }

        .book-info::before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(138, 95, 54, 0.05), transparent);
            transform: rotate(45deg);
            animation: shimmer 3s ease-in-out infinite;
        }

        q@keyframes shimmer {
            0% { transform: translateX(-100%) translateY(-100%) rotate(45deg); }
            100% { transform: translateX(100%) translateY(100%) rotate(45deg); }
        }

        .info-item {
            display: flex;
            align-items: center;
            margin-bottom: 25px;
            padding: 15px;
            background: rgba(138, 95, 54, 0.05);
            border-radius: 12px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .info-item:hover {
            transform: translateX(10px);
            background: rgba(138, 95, 54, 0.1);
            box-shadow: 0 5px 15px rgba(138, 95, 54, 0.1);
        }

        .info-label {
            font-weight: bold;
            color: #8a5f36;
            margin-right: 15px;
            min-width: 120px;
            font-size: 1.1rem;
        }

        .info-value {
            color: #2c1810;
            font-size: 1.1rem;
            flex: 1;
        }

        .content-section {
            margin-top: 40px;
            grid-column: 1 / -1;
            background: rgba(255, 255, 255, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 20px;
            padding: 40px;
            box-shadow: 0 15px 35px rgba(138, 95, 54, 0.1);
            border: 1px solid rgba(138, 95, 54, 0.1);
        }

        .content-title {
            font-size: 2rem;
            color: #8a5f36;
            margin-bottom: 30px;
            text-align: center;
            position: relative;
        }

        .content-title::after {
            content: '';
            position: absolute;
            bottom: -10px;
            left: 50%;
            transform: translateX(-50%);
            width: 100px;
            height: 2px;
            background: linear-gradient(90deg, #8a5f36, #d4af37);
            border-radius: 2px;
        }

        .pages-list {
            list-style: none;
            padding: 0;
        }

        .page-item {
            background: linear-gradient(135deg, rgba(249, 245, 241, 0.8), rgba(255, 255, 255, 0.9));
            margin-bottom: 20px;
            padding: 25px;
            border-radius: 15px;
            border-left: 5px solid #8a5f36;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

        .page-item::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 5px;
            height: 100%;
            background: linear-gradient(to bottom, #8a5f36, #d4af37);
            transition: width 0.3s ease;
        }

        .page-item:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 25px rgba(138, 95, 54, 0.15);
        }

        .page-item:hover::before {
            width: 100%;
            opacity: 0.05;
        }

        .page-number {
            font-weight: bold;
            color: #8a5f36;
            font-size: 1.2rem;
            margin-bottom: 10px;
        }

        .page-content {
            color: #2c1810;
            line-height: 1.6;
            font-size: 1.1rem;
        }

        .no-content {
            text-align: center;
            color: #8a5f36;
            font-style: italic;
            font-size: 1.2rem;
            padding: 40px;
            background: rgba(138, 95, 54, 0.05);
            border-radius: 15px;
            border: 2px dashed rgba(138, 95, 54, 0.3);
        }

        .action-buttons {
            display: flex;
            gap: 20px;
            justify-content: center;
            margin-top: 50px;
            flex-wrap: wrap;
        }

        .btn {
            padding: 15px 30px;
            border: none;
            border-radius: 50px;
            font-size: 1.2rem;
            font-weight: bold;
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            gap: 10px;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.275);
            position: relative;
            overflow: hidden;
            box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            transition: all 0.6s ease;
            transform: translate(-50%, -50%);
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary {
            background: linear-gradient(135deg, #8a5f36, #b8845c);
            color: white;
        }

        .btn-primary:hover {
            background: linear-gradient(135deg, #b8845c, #8a5f36);
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(138, 95, 54, 0.3);
        }

        .btn-success {
            background: linear-gradient(135deg, #2d5a3d, #4a7c59);
            color: white;
        }

        .btn-success:hover {
            background: linear-gradient(135deg, #4a7c59, #2d5a3d);
            transform: translateY(-5px);
            box-shadow: 0 20px 40px rgba(45, 90, 61, 0.3);
        }

        .floating-elements {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            z-index: -1;
        }

        .floating-book {
            position: absolute;
            font-size: 2rem;
            color: rgba(138, 95, 54, 0.1);
            animation: floatAround 15s ease-in-out infinite;
        }

        .floating-book:nth-child(1) { top: 10%; left: 10%; animation-delay: 0s; }
        .floating-book:nth-child(2) { top: 20%; right: 10%; animation-delay: 2s; }
        .floating-book:nth-child(3) { bottom: 30%; left: 15%; animation-delay: 4s; }
        .floating-book:nth-child(4) { bottom: 10%; right: 20%; animation-delay: 6s; }

        q@keyframes floatAround {
            0%, 100% { transform: translateY(0px) rotate(0deg); }
            25% { transform: translateY(-20px) rotate(5deg); }
            50% { transform: translateY(-10px) rotate(-5deg); }
            75% { transform: translateY(-30px) rotate(3deg); }
        }

        q@media (max-width: 768px) {
            .main-content {
                grid-template-columns: 1fr;
                gap: 40px;
            }
            
            .book-title {
                font-size: 2.5rem;
            }
            
            .action-buttons {
                flex-direction: column;
                align-items: center;
            }
            
            .btn {
                width: 100%;
                max-width: 300px;
                justify-content: center;
            }
        }

        .fade-in {
            animation: fadeIn 1s ease-out forwards;
        }

        q@keyframes fadeIn {
            0% { opacity: 0; transform: translateY(20px); }
            100% { opacity: 1; transform: translateY(0); }
        }
    </style>

</head>
<body>

    <div class="container">
        <div class="book-header">
            <h1 class="book-title">@Model.Title</h1>
        </div>

        <div class="main-content">
            <div class="book-cover-section">
                <div class="cover-container">
                    @if (Model.CoverImage != null && Model.CoverImage.Length > 0)
                    {
                        <img src="data:image/png;base64,@Convert.ToBase64String(Model.CoverImage)" alt="Kitap KapaÄÄ±" />
                    }
                    else
                    {
                        <div class="no-cover-placeholder"><span class=" fas fa-book"></span></div>
                    }
                </div>
            </div>

            <div class="book-info">
                <div class="info-item">
                    <span class="info-label">Yazar:</span>
                    <span class="info-value">@Model.Author</span>
                </div>

                <div class="info-item">
                    <span class="info-label">Kategori:</span>
                    <span class="info-value">@Model.Category?.Name</span>
                </div>

                <div class="info-item">
                    <span class="info-label">Sayfa SayÄ±sÄ±:</span>
                    <span class="info-value">@Model.PageCount</span>
                </div>
            </div>
        </div>

 <div class="action-buttons" style="margin-left: 400px; margin-top:-100px ;">
    <a class="btn btn-primary" asp-controller="Home" asp-action="AddBookPage" asp-route-bookId="@Model.Id">Sayfa Ekle</a>
    <a class="btn btn-success" asp-controller="Home" asp-action="ReadBook" asp-route-bookId="@Model.Id" asp-route-startPage="1">KitabÄ± Oku</a>



    <form method="post" asp-controller="Home" asp-action="AddFavorite">
        <input type="hidden" name="bookId" value="@Model.Id" />
        <button type="submit" class="btn btn-danger">BeÄen</button>
    </form>

    <form method="post" asp-controller="Home" asp-action="SaveBook" >
        <input type="hidden" name="bookId" value="@Model.Id" />
        <button type="submit" class="btn btn-info">Kaydet</button>
    </form>
</div>

        

        <div class="content-section">
            <h3 class="content-title">Kitap Ä°Ã§eriÄi</h3>

            @if (Model.Pages != null && Model.Pages.Any())
            {
                <ul class="pages-list">
                    @foreach (var sayfa in Model.Pages.OrderBy(p => p.PageNumber))
                    {
                        <li class="page-item">
                            <div class="page-number">Sayfa @sayfa.PageNumber:</div>
                            <div class="page-content">@sayfa.Content</div>
                        </li>
                    }
                </ul>
            }
            else
            {
                <p>Kitap iÃ§eriÄi bulunamadÄ±.</p>
            }
        </div>
    </div>


<script>
      
        document.addEventListener('DOMContentLoaded', function() {
            const elements = document.querySelectorAll('.fade-in');
            
            const observer = new IntersectionObserver((entries) => {
                entries.forEach((entry, index) => {
                    if (entry.isIntersecting) {
                        setTimeout(() => {
                            entry.target.style.opacity = '1';
                            entry.target.style.transform = 'translateY(0)';
                        }, index * 100);
                    }
                });
            });

            elements.forEach(el => {
                el.style.opacity = '0';
                el.style.transform = 'translateY(20px)';
                el.style.transition = 'all 0.6s ease';
                observer.observe(el);
            });
        });

      
        document.querySelectorAll('.page-item').forEach(item => {
            item.addEventListener('mouseenter', function() {
                this.style.transform = 'translateY(-8px) scale(1.02)';
            });
            
            item.addEventListener('mouseleave', function() {
                this.style.transform = 'translateY(0) scale(1)';
            });
        });

     
        document.querySelectorAll('.btn').forEach(btn => {
            btn.addEventListener('click', function(e) {
                let ripple = document.createElement('span');
                ripple.style.position = 'absolute';
                ripple.style.borderRadius = '50%';
                ripple.style.background = 'rgba(255, 255, 255, 0.6)';
                ripple.style.transform = 'scale(0)';
                ripple.style.animation = 'ripple 0.6s linear';
                ripple.style.left = (e.clientX - e.target.offsetLeft) + 'px';
                ripple.style.top = (e.clientY - e.target.offsetTop) + 'px';
                
                this.appendChild(ripple);
                
                setTimeout(() => {
                    ripple.remove();
                }, 600);
            });
        });

        
        const style = document.createElement('style');
        style.textContent = `
            q@keyframes ripple {
                to {
                    transform: scale(4);
                    opacity: 0;
                }
            }
        `;
        document.head.appendChild(style);
    </script>
</body>
</html>
